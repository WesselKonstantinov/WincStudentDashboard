{"version":3,"sources":["images/winc-academy-icon.png","components/Logo.js","components/Menu.js","components/ChartDisplayOptions.js","components/AssignmentsChart.js","components/HomePage.js","components/StudentsListPage.js","components/TablePaginationActions.js","components/AssignmentsTable.js","components/AssignmentsListPage.js","components/SingleStudentPage.js","components/StudentsChart.js","components/SingleAssignmentPage.js","components/Footer.js","App.js","index.js"],"names":["Logo","classes","className","logoWrapper","logo","src","alt","useStyles","makeStyles","backgroundColor","width","display","margin","borderRadius","padding","menu","icon","color","studentLink","marginLeft","heading","fontSize","Menu","AppBar","position","Toolbar","Typography","variant","component","Tooltip","title","IconButton","Link","to","aria-label","root","justifyContent","alignItems","BlueSwitch","withStyles","switchBase","checked","track","Switch","OrangeSwitch","ChartDisplayOptions","props","visibility","lineChartDisplay","toggleRatingsVisibility","handleChartDisplay","name","difficultyRating","onChange","inputProps","enjoyabilityRating","onClick","AssignmentsChart","chartData","dataContainsAverageRatings","every","datum","height","theme","VictoryTheme","material","x","orientation","gutter","colorScale","style","border","stroke","data","offset","y","dependentAxis","domain","tickLabels","tickLabelComponent","textAnchor","angle","labels","assignment","averageDifficulty","student","difficulty","labelComponent","averageEnjoyability","enjoyability","marginTop","spacing","marginBottom","HomePage","evaluations","getAssignments","getAverageRatingsForAssignment","map","Paper","elevation","align","avatar","StudentsListPage","students","List","dense","ListItem","ListItemAvatar","Avatar","first","last","picture","medium","ListItemText","primary","primaryTypographyProps","ListItemSecondaryAction","login","uuid","flexShrink","TablePaginationActions","count","page","rowsPerPage","onChangePage","useTheme","e","disabled","direction","Math","ceil","max","AssignmentsTable","useState","setPage","setRowsPerPage","rows","emptyRows","min","length","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","slice","row","scope","colSpan","TableFooter","TablePagination","rowsPerPageOptions","label","value","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","target","ActionsComponent","AssignmentsListPage","profilePicture","SingleStudentPage","useParams","find","filter","evaluation","large","Divider","divider","secondary","dob","age","email","cell","StudentsChart","SingleAssignmentPage","text","Footer","flexDirection","minHeight","main","flexGrow","App","setStudents","setEvaluations","setVisibility","setLineChartDisplay","useEffect","a","fetch","headers","response","json","results","fetchStudents","csv","result","fetchEvaluations","Set","ratingsForAssignment","rating","reduce","total","currentValue","basename","CssBaseline","Container","maxWidth","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.021496f4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/winc-academy-icon.67bf5a51.png\";","import logo from '../images/winc-academy-icon.png';\n\nfunction Logo({ classes }) {\n    return (\n        <div className={classes.logoWrapper}>\n            <img\n                className={classes.logo}\n                src={logo}\n                alt=\"Winc Academy logo\"\n            />\n        </div>\n    )\n}\n\nexport default Logo;","import { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/Home';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Logo from './Logo';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles({\n    logoWrapper: {\n        backgroundColor: '#fafafa',\n    },\n    logo: {\n        width: 100,\n        display: 'block',\n        margin: '0 auto',\n        borderRadius: '50%',\n        padding: 10,\n    },\n    menu: {\n        backgroundColor: '#4f8bc9',\n    },\n    icon: {\n        color: '#fff',\n    },\n    studentLink: {\n        marginLeft: 'auto',\n    },\n    heading: {\n        '@media (max-width: 400px)': {\n            fontSize: '1rem',\n        },\n    },\n});\n\nfunction Menu() {\n    const classes = useStyles();\n    return (\n        <AppBar position=\"static\" className={classes.menu}>\n            <Logo classes={classes} />\n            <Toolbar>\n                <Typography className={classes.heading} variant=\"h6\" component=\"h1\">\n                    Student Dashboard\n                </Typography>\n                <Tooltip title=\"Home\">\n                    <IconButton\n                        className={classes.icon}\n                        component={Link}\n                        to=\"/\"\n                        aria-label=\"Home\"\n                    >\n                        <HomeIcon />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Students\">\n                    <IconButton\n                        className={`${classes.icon} ${classes.studentLink}`}\n                        component={Link}\n                        to=\"/students\"\n                        aria-label=\"Students\"\n                    >\n                        <PersonIcon />\n                    </IconButton>\n                </Tooltip>\n                <Tooltip title=\"Assignments\">\n                    <IconButton\n                        className={classes.icon}\n                        component={Link}\n                        to=\"/assignments\"\n                        aria-label=\"Assignments\"\n                    >\n                        <AssignmentIcon />\n                    </IconButton>\n                </Tooltip>\n            </Toolbar>\n        </AppBar>\n    )\n}\n\nexport default Menu;","import { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Switch from '@material-ui/core/Switch';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport ShowChartIcon from '@material-ui/icons/ShowChart';\n\nconst useStyles = makeStyles({\n    root: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n    },\n});\n\nconst BlueSwitch = withStyles({\n    switchBase: {\n        color: '#72a2d3',\n        '&$checked': {\n            color: '#4f8bc9',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#72a2d3',\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\nconst OrangeSwitch = withStyles({\n    switchBase: {\n        color: '#ffb732',\n        '&$checked': {\n            color: '#ffa500',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#ffb732',\n        },\n    },\n    checked: {},\n    track: {},\n})(Switch);\n\nfunction ChartDisplayOptions(props) {\n    const {\n        visibility,\n        lineChartDisplay,\n        toggleRatingsVisibility,\n        handleChartDisplay\n    } = props;\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <Tooltip title=\"Toggle difficulty rating\">\n                <BlueSwitch\n                    name=\"difficultyRating\"\n                    checked={visibility.difficultyRating}\n                    onChange={toggleRatingsVisibility}\n                    inputProps={{ 'aria-label': 'Toggle difficulty rating' }}\n                />\n            </Tooltip>\n            <Tooltip title=\"Toggle enjoyability rating\">\n                <OrangeSwitch\n                    name=\"enjoyabilityRating\"\n                    checked={visibility.enjoyabilityRating}\n                    onChange={toggleRatingsVisibility}\n                    inputProps={{ 'aria-label': 'Toggle enjoyability rating' }}\n                />\n            </Tooltip>\n            <Tooltip title=\"Toggle bar/line chart\">\n                <IconButton onClick={handleChartDisplay} aria-label=\"Toggle bar/line chart\">\n                    {lineChartDisplay ? <BarChartIcon /> : <ShowChartIcon />}\n                </IconButton>\n            </Tooltip>\n        </div>\n    );\n}\n\nexport default ChartDisplayOptions;","import ChartDisplayOptions from './ChartDisplayOptions';\nimport {\n    VictoryBar,\n    VictoryLine,\n    VictoryChart,\n    VictoryGroup,\n    VictoryLegend,\n    VictoryTooltip,\n    VictoryAxis,\n    VictoryLabel,\n    VictoryTheme,\n} from 'victory';\n\nfunction AssignmentsChart(props) {\n    const {\n        chartData,\n        visibility,\n        lineChartDisplay,\n        toggleRatingsVisibility,\n        handleChartDisplay\n    } = props;\n    const dataContainsAverageRatings = chartData.every(datum => 'averageDifficulty' in datum && 'averageEnjoyability' in datum);\n\n    return (\n        <>\n            {lineChartDisplay ?\n                <VictoryChart\n                    width={600}\n                    height={300}\n                    theme={VictoryTheme.material}\n                >\n                    <VictoryLegend\n                        x={210}\n                        orientation=\"horizontal\"\n                        gutter={20}\n                        colorScale={['#4f8bc9', '#ffa500']}\n                        style={{ border: { stroke: '#000' } }}\n                        data={[\n                            { name: 'Difficulty' },\n                            { name: 'Enjoyability' },\n                        ]}\n                    />\n                    <VictoryGroup offset={1} colorScale={['#4f8bc9', '#ffa500']}>\n                        <VictoryLine\n                            data={chartData}\n                            x=\"assignment\"\n                            y={dataContainsAverageRatings ? 'averageDifficulty' : 'difficulty'}\n                            style={{ data: { display: visibility.difficultyRating ? 'block' : 'none' } }}\n                        />\n                        <VictoryLine\n                            data={chartData}\n                            x=\"assignment\"\n                            y={dataContainsAverageRatings ? 'averageEnjoyability' : 'enjoyability'}\n                            style={{ data: { display: visibility.enjoyabilityRating ? 'block' : 'none' } }}\n                        />\n                    </VictoryGroup>\n                    <VictoryAxis dependentAxis domain={[0, 5]} />\n                    <VictoryAxis\n                        style={{ tickLabels: { fontSize: 4.5, padding: 0 } }}\n                        tickLabelComponent={\n                            <VictoryLabel\n                                textAnchor=\"start\"\n                                angle={35}\n                            />\n                        }\n                    />\n                </VictoryChart>\n                :\n                <VictoryChart\n                    width={600}\n                    height={300}\n                    theme={VictoryTheme.material}\n                >\n                    <VictoryLegend\n                        x={210}\n                        orientation=\"horizontal\"\n                        gutter={20}\n                        colorScale={['#4f8bc9', '#ffa500']}\n                        style={{ border: { stroke: '#000' } }}\n                        data={[\n                            { name: 'Difficulty' },\n                            { name: 'Enjoyability' },\n                        ]}\n                    />\n                    <VictoryGroup offset={3} colorScale={['#4f8bc9', '#ffa500']}>\n                        <VictoryBar\n                            data={chartData}\n                            x=\"assignment\"\n                            y={dataContainsAverageRatings ? 'averageDifficulty' : 'difficulty'}\n                            labels={({ datum }) => dataContainsAverageRatings ?\n                                `Assignment: ${datum.assignment}\n                                    Average difficulty: ${datum.averageDifficulty}` :\n                                `Assignment: ${datum.assignment}\n                                    Difficulty rating by ${datum.student}: ${datum.difficulty}`}\n                            labelComponent={<VictoryTooltip style={{ fontSize: 6 }} />}\n                            style={{ data: { display: visibility.difficultyRating ? 'block' : 'none' } }}\n                        />\n                        <VictoryBar\n                            data={chartData}\n                            x=\"assignment\"\n                            y={dataContainsAverageRatings ? 'averageEnjoyability' : 'enjoyability'}\n                            labels={({ datum }) => dataContainsAverageRatings ?\n                                `Assignment: ${datum.assignment}\n                                    Average enjoyability: ${datum.averageEnjoyability}` :\n                                `Assignment: ${datum.assignment}\n                                    Enjoyability rating by ${datum.student}: ${datum.enjoyability}`}\n                            labelComponent={<VictoryTooltip style={{ fontSize: 6 }} />}\n                            style={{ data: { display: visibility.enjoyabilityRating ? 'block' : 'none' } }}\n                        />\n                    </VictoryGroup>\n                    <VictoryAxis dependentAxis domain={[0, 5]} />\n                    <VictoryAxis\n                        style={{ tickLabels: { fontSize: 4.5, padding: 0 } }}\n                        tickLabelComponent={\n                            <VictoryLabel\n                                textAnchor=\"start\"\n                                angle={35}\n                            />\n                        }\n                    />\n                </VictoryChart>\n            }\n            <ChartDisplayOptions\n                visibility={visibility}\n                lineChartDisplay={lineChartDisplay}\n                toggleRatingsVisibility={toggleRatingsVisibility}\n                handleChartDisplay={handleChartDisplay}\n            />\n        </>\n    );\n}\n\nexport default AssignmentsChart;","import { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport AssignmentsChart from './AssignmentsChart';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nfunction HomePage(props) {\n    const {\n        evaluations,\n        visibility,\n        lineChartDisplay,\n        getAssignments,\n        getAverageRatingsForAssignment,\n        toggleRatingsVisibility,\n        handleChartDisplay\n    } = props;\n    const classes = useStyles();\n    const assignments = getAssignments(evaluations);\n    const chartData = assignments.map(assignment => getAverageRatingsForAssignment(assignment));\n\n    return (\n        <Paper className={classes.root} elevation={3}>\n            <Typography\n                className={classes.title}\n                component=\"h2\"\n                variant=\"h3\"\n                align=\"center\"\n            >\n                Average Ratings\n            </Typography>\n            <AssignmentsChart\n                chartData={chartData}\n                visibility={visibility}\n                lineChartDisplay={lineChartDisplay}\n                toggleRatingsVisibility={toggleRatingsVisibility}\n                handleChartDisplay={handleChartDisplay}\n            />\n        </Paper>\n    );\n}\n\nexport default HomePage;","import Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowForward from '@material-ui/icons/ArrowForward';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    avatar: {\n        width: theme.spacing(6),\n        height: theme.spacing(6),\n    },\n}));\n\nfunction StudentsListPage({ students }) {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root} elevation={3}>\n            <Typography\n                component=\"h2\"\n                variant=\"h3\"\n                align=\"center\"\n            >\n                All Students\n            </Typography>\n            <List dense>\n                {students.map(student => {\n                    return (\n                        <ListItem key={student.login.uuid}>\n                            <ListItemAvatar>\n                                <Avatar\n                                    className={classes.avatar}\n                                    variant=\"square\"\n                                    alt={`${student.name.first} ${student.name.last}`}\n                                    src={student.picture.medium}\n                                />\n                            </ListItemAvatar>\n                            <ListItemText\n                                primary={`${student.name.first} ${student.name.last}`}\n                                primaryTypographyProps={{ variant: 'body1' }}\n                            />\n                            <ListItemSecondaryAction>\n                                <IconButton\n                                    component={Link}\n                                    to={`/students/${student.name.first}`}\n                                >\n                                    <ArrowForward />\n                                </IconButton>\n                            </ListItemSecondaryAction>\n                        </ListItem>\n                    );\n                })}\n            </List>\n        </Paper>\n    );\n}\n\nexport default StudentsListPage;","import PropTypes from 'prop-types';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexShrink: 0,\n        marginLeft: theme.spacing(2.5),\n    },\n}));\n\nfunction TablePaginationActions({ count, page, rowsPerPage, onChangePage }) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const handleFirstPageButtonClick = (e) => {\n        onChangePage(e, 0);\n    };\n\n    const handleBackButtonClick = (e) => {\n        onChangePage(e, page - 1);\n    };\n\n    const handleNextButtonClick = (e) => {\n        onChangePage(e, page + 1);\n    };\n\n    const handleLastPageButtonClick = (e) => {\n        onChangePage(e, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n    };\n\n    return (\n        <div className={classes.root}>\n            <IconButton\n                onClick={handleFirstPageButtonClick}\n                disabled={page === 0}\n                aria-label=\"first page\"\n            >\n                {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n            </IconButton>\n            <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n                {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n            </IconButton>\n            <IconButton\n                onClick={handleNextButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"next page\"\n            >\n                {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n            </IconButton>\n            <IconButton\n                onClick={handleLastPageButtonClick}\n                disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n                aria-label=\"last page\"\n            >\n                {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n            </IconButton>\n        </div>\n    );\n}\n\nTablePaginationActions.propTypes = {\n    count: PropTypes.number.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n};\n\nexport default TablePaginationActions;","import { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport TablePaginationActions from './TablePaginationActions';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nfunction AssignmentsTable({ evaluations, getAssignments, getAverageRatingsForAssignment }) {\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    const handleChangePage = (e, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (e) => {\n        setRowsPerPage(parseInt(e.target.value, 10));\n        setPage(0);\n    };\n\n    const assignments = getAssignments(evaluations);\n    const rows = assignments.map(assignment => getAverageRatingsForAssignment(assignment));\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <TableContainer>\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Assignment</TableCell>\n                        <TableCell align=\"right\">Average difficulty</TableCell>\n                        <TableCell align=\"right\">Average enjoyability</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {(rowsPerPage > 0\n                        ? rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                        : rows).map(row => (\n                            <TableRow key={row.assignment}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <Link to={`assignments/${row.assignment}`}>\n                                        {row.assignment}\n                                    </Link>\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    {row.averageDifficulty}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    {row.averageEnjoyability}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    {emptyRows > 0 && (\n                        <TableRow style={{ height: 53 * emptyRows }}>\n                            <TableCell colSpan={6} />\n                        </TableRow>\n                    )}\n                </TableBody>\n                <TableFooter>\n                    <TableRow>\n                        <TablePagination\n                            rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n                            colSpan={3}\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            SelectProps={{\n                                inputProps: { 'aria-label': 'rows per page' },\n                                native: true,\n                            }}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                            ActionsComponent={TablePaginationActions}\n                        />\n                    </TableRow>\n                </TableFooter>\n            </Table>\n        </TableContainer>\n    );\n}\n\nexport default AssignmentsTable;","import { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport AssignmentsTable from './AssignmentsTable';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nfunction AssignmentsListPage({ evaluations, getAssignments, getAverageRatingsForAssignment }) {\n    const classes = useStyles();\n\n    return (\n        <Paper className={classes.root} elevation={3}>\n            <Typography\n                component=\"h2\"\n                variant=\"h3\"\n                align=\"center\"\n            >\n                All Assignments\n            </Typography>\n            <AssignmentsTable\n                evaluations={evaluations}\n                getAssignments={getAssignments}\n                getAverageRatingsForAssignment={getAverageRatingsForAssignment}\n            />\n        </Paper>\n    );\n}\n\nexport default AssignmentsListPage;","import { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AssignmentsChart from './AssignmentsChart';\nimport { useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    profilePicture: {\n        width: theme.spacing(30),\n        height: theme.spacing(30),\n        margin: '24px auto',\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nfunction SingleStudentPage(props) {\n    const {\n        students,\n        evaluations,\n        visibility,\n        lineChartDisplay,\n        toggleRatingsVisibility,\n        handleChartDisplay\n    } = props;\n    const classes = useStyles();\n    const { name } = useParams();\n    const student = students.find(student => student.name.first === name);\n    const chartData = evaluations.filter(evaluation => evaluation.student === name);\n\n    return (\n        <>\n            <Paper className={classes.root} elevation={3}>\n                <Typography\n                    component=\"h2\"\n                    variant=\"h3\"\n                    align=\"center\"\n                >\n                    Student Details\n            </Typography>\n                <Avatar\n                    className={classes.profilePicture}\n                    variant=\"rounded\"\n                    alt={`${student.name.first} ${student.name.last}`}\n                    src={student.picture.large}\n                />\n                <Divider />\n                <List>\n                    <ListItem divider>\n                        <ListItemText\n                            align=\"center\"\n                            primary=\"Full name\"\n                            secondary={`${student.name.first} ${student.name.last}`}\n                        />\n                    </ListItem>\n                    <ListItem divider>\n                        <ListItemText\n                            align=\"center\"\n                            primary=\"Age\"\n                            secondary={student.dob.age}\n                        />\n                    </ListItem>\n                    <ListItem divider>\n                        <ListItemText\n                            align=\"center\"\n                            primary=\"Email\"\n                            secondary={student.email}\n                        />\n                    </ListItem>\n                    <ListItem>\n                        <ListItemText\n                            align=\"center\"\n                            primary=\"Phone number\"\n                            secondary={student.cell}\n                        />\n                    </ListItem>\n                </List>\n            </Paper>\n            <Paper className={classes.root} elevation={3}>\n                <Typography\n                    className={classes.title}\n                    component=\"h2\"\n                    variant=\"h3\"\n                    align=\"center\"\n                >\n                    Student Ratings\n            </Typography>\n                <AssignmentsChart\n                    chartData={chartData}\n                    visibility={visibility}\n                    lineChartDisplay={lineChartDisplay}\n                    toggleRatingsVisibility={toggleRatingsVisibility}\n                    handleChartDisplay={handleChartDisplay}\n                />\n            </Paper>\n        </>\n    );\n}\n\nexport default SingleStudentPage;","import ChartDisplayOptions from './ChartDisplayOptions';\nimport {\n    VictoryBar,\n    VictoryLine,\n    VictoryChart,\n    VictoryGroup,\n    VictoryLegend,\n    VictoryTooltip,\n    VictoryAxis,\n    VictoryTheme\n} from 'victory';\n\nfunction StudentsChart(props) {\n    const {\n        chartData,\n        visibility,\n        lineChartDisplay,\n        toggleRatingsVisibility,\n        handleChartDisplay\n    } = props;\n\n    return (\n        <>\n            {lineChartDisplay ?\n                <VictoryChart\n                    width={600}\n                    height={300}\n                    theme={VictoryTheme.material}\n                >\n                    <VictoryLegend\n                        x={210}\n                        orientation=\"horizontal\"\n                        gutter={20}\n                        colorScale={['#4f8bc9', '#ffa500']}\n                        style={{ border: { stroke: '#000' } }}\n                        data={[\n                            { name: 'Difficulty' },\n                            { name: 'Enjoyability' },\n                        ]}\n                    />\n                    <VictoryGroup offset={1} colorScale={['#4f8bc9', '#ffa500']}>\n                        <VictoryLine\n                            data={chartData}\n                            x=\"student\"\n                            y=\"difficulty\"\n                            style={{ data: { display: visibility.difficultyRating ? 'block' : 'none' } }}\n                        />\n                        <VictoryLine\n                            data={chartData}\n                            x=\"student\"\n                            y=\"enjoyability\"\n                            style={{ data: { display: visibility.enjoyabilityRating ? 'block' : 'none' } }}\n                        />\n                    </VictoryGroup>\n                    <VictoryAxis dependentAxis domain={[0, 5]} />\n                    <VictoryAxis style={{ tickLabels: { padding: 0 } }} />\n                </VictoryChart>\n                :\n                <VictoryChart\n                    width={600}\n                    height={300}\n                    theme={VictoryTheme.material}\n                >\n                    <VictoryLegend\n                        x={210}\n                        orientation=\"horizontal\"\n                        gutter={20}\n                        colorScale={['#4f8bc9', '#ffa500']}\n                        style={{ border: { stroke: '#000' } }}\n                        data={[\n                            { name: 'Difficulty' },\n                            { name: 'Enjoyability' },\n                        ]}\n                    />\n                    <VictoryGroup offset={15} colorScale={['#4f8bc9', '#ffa500']}>\n                        <VictoryBar\n                            data={chartData}\n                            x=\"student\"\n                            y=\"difficulty\"\n                            labels={({ datum }) => `Difficulty rating by ${datum.student}: ${datum.difficulty}`}\n                            labelComponent={<VictoryTooltip style={{ fontSize: 6 }} />}\n                            style={{ data: { display: visibility.difficultyRating ? 'block' : 'none' } }}\n                        />\n                        <VictoryBar\n                            data={chartData}\n                            x=\"student\"\n                            y=\"enjoyability\"\n                            labels={({ datum }) => `Enjoyability rating by ${datum.student}: ${datum.enjoyability}`}\n                            labelComponent={<VictoryTooltip style={{ fontSize: 6 }} />}\n                            style={{ data: { display: visibility.enjoyabilityRating ? 'block' : 'none' } }}\n                        />\n                    </VictoryGroup>\n                    <VictoryAxis dependentAxis domain={[0, 5]} />\n                    <VictoryAxis style={{ tickLabels: { padding: 0 } }} />\n                </VictoryChart>\n            }\n            <ChartDisplayOptions\n                visibility={visibility}\n                lineChartDisplay={lineChartDisplay}\n                toggleRatingsVisibility={toggleRatingsVisibility}\n                handleChartDisplay={handleChartDisplay}\n            />\n        </>\n    );\n}\n\nexport default StudentsChart;","import { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport StudentsChart from './StudentsChart';\nimport { useParams } from 'react-router-dom';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(3),\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n}));\n\nfunction SingleAssignmentPage(props) {\n    const {\n        evaluations,\n        visibility,\n        lineChartDisplay,\n        toggleRatingsVisibility,\n        handleChartDisplay\n    } = props;\n    const classes = useStyles();\n    const { name } = useParams();\n    const chartData = evaluations.filter(evaluation => evaluation.assignment === name);\n\n    return (\n        <Paper className={classes.root} elevation={3}>\n            <Typography\n                className={classes.title}\n                component=\"h2\"\n                variant=\"h3\"\n                align=\"center\"\n            >\n                {name}\n            </Typography>\n            <StudentsChart\n                chartData={chartData}\n                visibility={visibility}\n                lineChartDisplay={lineChartDisplay}\n                toggleRatingsVisibility={toggleRatingsVisibility}\n                handleChartDisplay={handleChartDisplay}\n            />\n        </Paper>\n    );\n}\n\nexport default SingleAssignmentPage;","import { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles({\n    root: {\n        backgroundColor: '#4f8bc9',\n        height: 64,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n    },\n    text: {\n        color: '#fff',\n    },\n})\n\nfunction Footer() {\n    const classes = useStyles();\n    return (\n        <footer className={classes.root}>\n            <Typography className={classes.text} variant=\"body1\">\n                &copy; 2021 - Wessel Konstantinov\n            </Typography>\n        </footer>\n    );\n}\n\nexport default Footer;","import { csv } from 'd3';\nimport { useState, useEffect } from 'react';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Menu from './components/Menu';\nimport HomePage from './components/HomePage';\nimport StudentsListPage from './components/StudentsListPage';\nimport AssignmentsListPage from './components/AssignmentsListPage';\nimport SingleStudentPage from './components/SingleStudentPage';\nimport SingleAssignmentPage from './components/SingleAssignmentPage';\nimport Footer from './components/Footer';\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    minHeight: '100vh',\n  },\n  main: {\n    flexGrow: 1,\n  },\n})\n\nfunction App() {\n  const classes = useStyles();\n\n  const [students, setStudents] = useState([]);\n  const [evaluations, setEvaluations] = useState([]);\n  const [visibility, setVisibility] = useState({\n    difficultyRating: true,\n    enjoyabilityRating: true,\n  });\n  const [lineChartDisplay, setLineChartDisplay] = useState(false);\n\n  useEffect(() => {\n    const fetchStudents = async () => {\n      const response = await fetch('./data/students-data.json', {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n      });\n      const data = await response.json();\n      setStudents(data.results);\n    };\n    fetchStudents();\n  }, []);\n\n  useEffect(() => {\n    const fetchEvaluations = async () => {\n      const results = await csv('./data/evaluations-data.csv', {\n        headers: {\n          'Content-Type': 'text/csv',\n          'Accept': 'text/csv'\n        }\n      });\n      const data = results.map(result => ({\n        student: result.student,\n        assignment: result.assignment,\n        difficulty: +result.difficulty,\n        enjoyability: +result.enjoyability,\n      }));\n      setEvaluations(data);\n    };\n    fetchEvaluations();\n  }, []);\n\n  const getAssignments = evaluations => [...new Set(evaluations.map(evaluation => evaluation.assignment))];\n\n  const getAverageRatingsForAssignment = assignment => {\n    const ratingsForAssignment = evaluations.filter(evaluation => evaluation.assignment === assignment);\n    const averageDifficulty = ratingsForAssignment.map(rating => rating.difficulty).reduce((total, currentValue) => total + currentValue, 0) / ratingsForAssignment.length;\n    const averageEnjoyability = ratingsForAssignment.map(rating => rating.enjoyability).reduce((total, currentValue) => total + currentValue, 0) / ratingsForAssignment.length;\n    return {\n      assignment,\n      averageDifficulty,\n      averageEnjoyability,\n    };\n  };\n\n  const toggleRatingsVisibility = e => {\n    const { name, checked } = e.target;\n    setVisibility({\n      ...visibility,\n      [name]: checked,\n    });\n  };\n\n  const handleChartDisplay = () => setLineChartDisplay(!lineChartDisplay);\n\n  return (\n    <HashRouter basename='/'>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Menu />\n        <Container\n          className={classes.main}\n          maxWidth=\"xl\"\n          component=\"main\"\n        >\n          <Switch>\n            <Route exact path=\"/\">\n              <HomePage\n                evaluations={evaluations}\n                visibility={visibility}\n                lineChartDisplay={lineChartDisplay}\n                getAssignments={getAssignments}\n                getAverageRatingsForAssignment={getAverageRatingsForAssignment}\n                toggleRatingsVisibility={toggleRatingsVisibility}\n                handleChartDisplay={handleChartDisplay}\n              />\n            </Route>\n            <Route exact path=\"/students\">\n              <StudentsListPage students={students} />\n            </Route>\n            <Route exact path=\"/assignments\">\n              <AssignmentsListPage\n                evaluations={evaluations}\n                getAssignments={getAssignments}\n                getAverageRatingsForAssignment={getAverageRatingsForAssignment}\n              />\n            </Route>\n            <Route exact path=\"/students/:name\">\n              <SingleStudentPage\n                students={students}\n                evaluations={evaluations}\n                visibility={visibility}\n                lineChartDisplay={lineChartDisplay}\n                toggleRatingsVisibility={toggleRatingsVisibility}\n                handleChartDisplay={handleChartDisplay}\n              />\n            </Route>\n            <Route exact path=\"/assignments/:name\">\n              <SingleAssignmentPage\n                evaluations={evaluations}\n                visibility={visibility}\n                lineChartDisplay={lineChartDisplay}\n                toggleRatingsVisibility={toggleRatingsVisibility}\n                handleChartDisplay={handleChartDisplay}\n              />\n            </Route>\n          </Switch>\n        </Container>\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}